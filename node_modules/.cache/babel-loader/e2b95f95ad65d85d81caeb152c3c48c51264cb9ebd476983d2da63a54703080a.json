{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/weathersite/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BsCloudSun, BsCloudMoon, BsCloudRain, BsCloudLightningRain, BsCloudSnow } from 'react-icons/bs';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState({});\n  const [location, setLocation] = useState({});\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setLocation({\n        latitude,\n        longitude\n      });\n      const API_KEY = '97d54f6f736bc4d9d7014516da54aa0c';\n      const API_URL = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;\n      try {\n        const response = await axios.get(API_URL);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }, []);\n  let time = null;\n  let city = null;\n  let temperature = null;\n  let weatherIcon = null;\n  if (weatherData.dt) {\n    time = new Date(weatherData.dt * 1000).toLocaleTimeString().slice(0, 5);\n    city = weatherData.name;\n    temperature = (weatherData.main.temp - 273.15).toFixed(2);\n    const {\n      id\n    } = weatherData.weather[0];\n    if (id >= 200 && id <= 232) {\n      weatherIcon = /*#__PURE__*/_jsxDEV(BsCloudLightningRain, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this);\n    } else if (id >= 300 && id <= 321) {\n      weatherIcon = /*#__PURE__*/_jsxDEV(BsCloudRain, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this);\n    } else if (id >= 500 && id <= 531) {\n      weatherIcon = /*#__PURE__*/_jsxDEV(BsCloudRain, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this);\n    } else if (id >= 600 && id <= 622) {\n      weatherIcon = /*#__PURE__*/_jsxDEV(BsCloudSnow, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this);\n    } else if (id >= 801 && id <= 804) {\n      weatherIcon = new Date().getHours() >= 6 && new Date().getHours() <= 18 ? /*#__PURE__*/_jsxDEV(BsCloudSun, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(BsCloudMoon, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WEATHER SITE\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), city ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [city, \", \", time]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [temperature, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icon\",\n        children: weatherIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading weather data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9bGl/x7lroUJ9uVsxdwg4I6i5/g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BsCloudSun","BsCloudMoon","BsCloudRain","BsCloudLightningRain","BsCloudSnow","App","weatherData","setWeatherData","location","setLocation","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","API_KEY","API_URL","response","get","data","error","console","time","city","temperature","weatherIcon","dt","Date","toLocaleTimeString","slice","name","main","temp","toFixed","id","weather","getHours"],"sources":["/home/oem/Desktop/weathersite/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BsCloudSun, BsCloudMoon, BsCloudRain, BsCloudLightningRain, BsCloudSnow } from 'react-icons/bs';\nimport './App.css'\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState({});\n  const [location, setLocation] = useState({});\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async position => {\n      const { latitude, longitude } = position.coords;\n      setLocation({ latitude, longitude });\n\n      const API_KEY = '97d54f6f736bc4d9d7014516da54aa0c';\n      const API_URL = `http://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}`;\n\n      try {\n        const response = await axios.get(API_URL);\n        setWeatherData(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    });\n  }, []);\n\n  let time = null;\n  let city = null;\n  let temperature = null;\n  let weatherIcon = null;\n\n  if (weatherData.dt) {\n    time = new Date(weatherData.dt * 1000).toLocaleTimeString().slice(0, 5);\n    city = weatherData.name;\n    temperature = (weatherData.main.temp - 273.15).toFixed(2);\n\n    const { id } = weatherData.weather[0];\n    if (id >= 200 && id <= 232) {\n      weatherIcon = <BsCloudLightningRain className='icon' />;\n    } else if (id >= 300 && id <= 321) {\n      weatherIcon = <BsCloudRain className='icon' />;\n    } else if (id >= 500 && id <= 531) {\n      weatherIcon = <BsCloudRain className='icon' />;\n    } else if (id >= 600 && id <= 622) {\n      weatherIcon = <BsCloudSnow className='icon' />;\n    } else if (id >= 801 && id <= 804) {\n      weatherIcon = new Date().getHours() >= 6 && new Date().getHours() <= 18 ? (\n        <BsCloudSun className='icon' />\n      ) : (\n        <BsCloudMoon className='icon' />\n      );\n    }\n  }\n\n  return (\n    <div className='app'>\n      <h1>WEATHER SITE</h1>\n      {city ? (\n        <>\n          <h1>\n            {city}, {time}\n          </h1>\n          <h2>\n            {temperature}Â°C\n          </h2>\n          <div className='icon'>\n            {weatherIcon}\n          </div>\n        </>\n      ) : (\n        <p>Loading weather data...</p>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}