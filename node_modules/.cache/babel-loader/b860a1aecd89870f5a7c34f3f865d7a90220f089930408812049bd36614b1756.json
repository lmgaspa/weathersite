{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/weathersite/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport sky from './images/nublado.jpg';\nimport { BsCloudSun, BsCloudMoon, BsCloudRain, BsCloudLightningRain, BsCloudSnow } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weatherData, setWeatherData] = useState({});\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    async function getWeatherData() {\n      try {\n        const result = await axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=your_city_here&appid=your_api_key_here\");\n        setWeatherData(result.data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getWeatherData();\n  }, []);\n  let date = new Date();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  let formattedTime = `${hours}:${minutes}`;\n  const currentHour = new Date().getHours();\n  let icon;\n  if (weatherData.weather) {\n    const weatherId = weatherData.weather[0].id;\n    if (weatherId >= 200 && weatherId <= 232) {\n      icon = /*#__PURE__*/_jsxDEV(BsCloudLightningRain, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 14\n      }, this);\n    } else if (weatherId >= 300 && weatherId <= 321) {\n      icon = /*#__PURE__*/_jsxDEV(BsCloudRain, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 14\n      }, this);\n    } else if (weatherId >= 600 && weatherId <= 622) {\n      icon = /*#__PURE__*/_jsxDEV(BsCloudSnow, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 14\n      }, this);\n    } else {\n      const currentHour = new Date().getHours();\n      if (currentHour >= 6 && currentHour < 18) {\n        icon = /*#__PURE__*/_jsxDEV(BsCloudSun, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, this);\n      } else {\n        icon = /*#__PURE__*/_jsxDEV(BsCloudMoon, {\n          className: \"icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 16\n        }, this);\n      }\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"WEATHER SITE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), weatherData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: [weatherData.name, \", \", formattedTime]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [(weatherData.main.temp - 273.15).toFixed(0), \" \\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), icon]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : errorMessage ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading weather data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this);\n  }\n  ;\n}\n_s(App, \"5xEA5so05CZJUJyHQ6o/uhT7T9g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useState","useEffect","sky","BsCloudSun","BsCloudMoon","BsCloudRain","BsCloudLightningRain","BsCloudSnow","App","weatherData","setWeatherData","error","setError","getWeatherData","result","get","data","date","Date","hours","getHours","minutes","getMinutes","formattedTime","currentHour","icon","weather","weatherId","id","name","main","temp","toFixed","errorMessage"],"sources":["/home/oem/Desktop/weathersite/src/App.js"],"sourcesContent":["import './App.css';\nimport axios from 'axios';\nimport React, { useState, useEffect } from 'react';\nimport sky from './images/nublado.jpg'\nimport { BsCloudSun, BsCloudMoon,  BsCloudRain, BsCloudLightningRain, BsCloudSnow } from 'react-icons/bs'\n\nfunction App() {\n  const [weatherData, setWeatherData] = useState({});\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function getWeatherData() {\n      try {\n        const result = await axios.get(\"http://api.openweathermap.org/data/2.5/weather?q=your_city_here&appid=your_api_key_here\");\n        setWeatherData(result.data);\n      } catch (error) {\n        setError(error);\n      }\n    }\n    getWeatherData();\n  }, []);\n\n  let date = new Date();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  let formattedTime = `${hours}:${minutes}`;\n\n  const currentHour = new Date().getHours();\n  let icon;\n  if (weatherData.weather) {\n    const weatherId = weatherData.weather[0].id;\n\n    if (weatherId >= 200 && weatherId <= 232) {\n      icon = <BsCloudLightningRain className=\"icon\" />;\n    } else if (weatherId >= 300 && weatherId <= 321) {\n      icon = <BsCloudRain className=\"icon\" />;\n    } else if (weatherId >= 600 && weatherId <= 622) {\n      icon = <BsCloudSnow className=\"icon\" />;\n    } else {\n      const currentHour = new Date().getHours();\n\n      if (currentHour >= 6 && currentHour < 18) {\n        icon = <BsCloudSun className=\"icon\" />;\n      } else {\n        icon = <BsCloudMoon className=\"icon\" />;\n      }\n    }\n\n  return (\n    <div className='app'>\n      <h1>WEATHER SITE</h1>\n      {weatherData ? (\n        <><div>\n          <h2>\n            {weatherData.name}, {formattedTime}\n          </h2>\n        </div><div>\n            <h3>\n              {(weatherData.main.temp - 273.15).toFixed(0)} Â°C\n            </h3>\n            {icon}\n          </div></>\n      ) : errorMessage ? (\n        <p>{errorMessage}</p>\n      ) : (\n        <p>Loading weather data...</p>\n      )}\n    </div>\n  );\n};}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}