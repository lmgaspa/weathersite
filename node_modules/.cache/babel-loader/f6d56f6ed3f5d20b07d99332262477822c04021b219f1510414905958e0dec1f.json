{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/weathersite/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BsCloudSun, BsCloudMoon, BsCloudRain, BsCloudLightningRain, BsCloudSnow } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [city, setCity] = useState(null);\n  const [time, setTime] = useState(null);\n  const [temperature, setTemperature] = useState(null);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async position => {\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      const API_KEY = '97d54f6f736bc4d9d7014516da54aa0c';\n      const URL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n      const response = await axios.get(URL);\n      setCity(response.data.name);\n      setTemperature(response.data.main.temp);\n    }, error => {\n      console.error(error);\n    });\n    const currentTime = new Date();\n    const hours = currentTime.getHours();\n    const minutes = currentTime.getMinutes();\n    setTime(`${hours}:${minutes}`);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [city, \" \", time]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"A temperatura \\xE9 \", temperature, \" Celsius\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QBIm6TGXsmagzMP7V9kkOrczNNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BsCloudSun","BsCloudMoon","BsCloudRain","BsCloudLightningRain","BsCloudSnow","App","city","setCity","time","setTime","temperature","setTemperature","navigator","geolocation","getCurrentPosition","position","latitude","longitude","coords","API_KEY","URL","response","get","data","name","main","temp","error","console","currentTime","Date","hours","getHours","minutes","getMinutes"],"sources":["/home/oem/Desktop/weathersite/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {BsCloudSun, BsCloudMoon, BsCloudRain, BsCloudLightningRain, BsCloudSnow} from 'react-icons/bs';\n\nfunction App() {\n  const [city, setCity] = useState(null);\n  const [time, setTime] = useState(null);\n  const [temperature, setTemperature] = useState(null);\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async (position) => {\n      const { latitude, longitude } = position.coords;\n      const API_KEY = '97d54f6f736bc4d9d7014516da54aa0c';\n      const URL = `https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&appid=${API_KEY}&units=metric`;\n      const response = await axios.get(URL);\n      setCity(response.data.name);\n      setTemperature(response.data.main.temp);\n    }, (error) => {\n      console.error(error);\n    });\n\n    const currentTime = new Date();\n    const hours = currentTime.getHours();\n    const minutes = currentTime.getMinutes();\n    setTime(`${hours}:${minutes}`);\n  }, []);\n\n  return (\n    <div className='app'>\n      <h1>{city} {time}</h1>\n      <h2>A temperatura Ã© {temperature} Celsius</h2>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,UAAU,EAAEC,WAAW,EAAEC,WAAW,EAAEC,oBAAoB,EAAEC,WAAW,QAAO,gBAAgB;AAAC;AAEvG,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdc,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAC,MAAOC,QAAQ,IAAK;MAC3D,MAAM;QAAEC,QAAQ;QAAEC;MAAU,CAAC,GAAGF,QAAQ,CAACG,MAAM;MAC/C,MAAMC,OAAO,GAAG,kCAAkC;MAClD,MAAMC,GAAG,GAAI,uDAAsDJ,QAAS,QAAOC,SAAU,UAASE,OAAQ,eAAc;MAC5H,MAAME,QAAQ,GAAG,MAAMtB,KAAK,CAACuB,GAAG,CAACF,GAAG,CAAC;MACrCb,OAAO,CAACc,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC;MAC3Bb,cAAc,CAACU,QAAQ,CAACE,IAAI,CAACE,IAAI,CAACC,IAAI,CAAC;IACzC,CAAC,EAAGC,KAAK,IAAK;MACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB,CAAC,CAAC;IAEF,MAAME,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,MAAMC,KAAK,GAAGF,WAAW,CAACG,QAAQ,EAAE;IACpC,MAAMC,OAAO,GAAGJ,WAAW,CAACK,UAAU,EAAE;IACxCzB,OAAO,CAAE,GAAEsB,KAAM,IAAGE,OAAQ,EAAC,CAAC;EAChC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,WAAK3B,IAAI,EAAC,GAAC,EAACE,IAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eACtB;MAAA,WAAI,qBAAgB,EAACE,WAAW,EAAC,UAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEV;AAAC,GA7BQL,GAAG;AAAA,KAAHA,GAAG;AA+BZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}