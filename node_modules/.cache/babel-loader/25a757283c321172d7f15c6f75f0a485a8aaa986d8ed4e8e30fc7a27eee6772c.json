{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/weathersite/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BsCloudSun, BsCloudMoon, BsCloudRain, BsCloudLightningRain, BsCloudSnow } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [weather, setWeather] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      const lat = position.coords.latitude;\n      const lon = position.coords.longitude;\n      axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=YOUR_API_KEY`).then(response => {\n        setWeather(response.data.weather[0].main);\n      }).catch(error => {\n        setErrorMessage(error.message);\n      });\n    }, error => {\n      setErrorMessage(error.message);\n    });\n  }, []);\n  let date = new Date();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  let formattedTime = `${hours}:${minutes}`;\n  const currentHour = new Date().getHours();\n  let icon;\n  if (weatherData.weather) {\n    const weatherId = weatherData.weather[0].id;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 24\n    }, this), weather && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: weather === 'Clear' ? /*#__PURE__*/_jsxDEV(BsCloudSun, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : weather === 'Clouds' ? /*#__PURE__*/_jsxDEV(BsCloudMoon, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this) : weather === 'Rain' ? /*#__PURE__*/_jsxDEV(BsCloudRain, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this) : weather === 'Thunderstorm' ? /*#__PURE__*/_jsxDEV(BsCloudLightningRain, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this) : weather === 'Snow' ? /*#__PURE__*/_jsxDEV(BsCloudSnow, {\n        className: \"icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Unknown weather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wmdJ0QteC3BnebspttlU0pVmOdI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","BsCloudSun","BsCloudMoon","BsCloudRain","BsCloudLightningRain","BsCloudSnow","App","weather","setWeather","errorMessage","setErrorMessage","navigator","geolocation","getCurrentPosition","position","lat","coords","latitude","lon","longitude","get","then","response","data","main","catch","error","message","date","Date","hours","getHours","minutes","getMinutes","formattedTime","currentHour","icon","weatherData","weatherId","id"],"sources":["/home/oem/Desktop/weathersite/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BsCloudSun, BsCloudMoon, BsCloudRain, BsCloudLightningRain, BsCloudSnow } from 'react-icons/bs';\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        const lat = position.coords.latitude;\n        const lon = position.coords.longitude;\n\n        axios\n          .get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=YOUR_API_KEY`)\n          .then(response => {\n            setWeather(response.data.weather[0].main);\n          })\n          .catch(error => {\n            setErrorMessage(error.message);\n          });\n      },\n      error => {\n        setErrorMessage(error.message);\n      }\n    );\n  }, []);\n\n  let date = new Date();\n  let hours = date.getHours();\n  let minutes = date.getMinutes();\n  let formattedTime = `${hours}:${minutes}`;\n\n  const currentHour = new Date().getHours();\n  let icon;\n  if (weatherData.weather) {\n    const weatherId = weatherData.weather[0].id;\n  }\n\n  return (\n    <div className='app'>\n      \n      {errorMessage && <p>{errorMessage}</p>}\n      {weather && (\n        <div>\n          {weather === 'Clear' ? (\n            <BsCloudSun className=\"icon\" />\n          ) : weather === 'Clouds' ? (\n            <BsCloudMoon className=\"icon\" />\n          ) : weather === 'Rain' ? (\n            <BsCloudRain className=\"icon\" />\n          ) : weather === 'Thunderstorm' ? (\n            <BsCloudLightningRain className=\"icon\" />\n          ) : weather === 'Snow' ? (\n            <BsCloudSnow className=\"icon\" />\n          ) : (\n            <p>Unknown weather</p>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,EAAEC,WAAW,EAAEC,WAAW,EAAEC,oBAAoB,EAAEC,WAAW,QAAQ,gBAAgB;AAAC;AAEzG,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACdY,SAAS,CAACC,WAAW,CAACC,kBAAkB,CACtCC,QAAQ,IAAI;MACV,MAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAM,CAACC,QAAQ;MACpC,MAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAM,CAACG,SAAS;MAErCnB,KAAK,CACFoB,GAAG,CAAE,uDAAsDL,GAAI,QAAOG,GAAI,qBAAoB,CAAC,CAC/FG,IAAI,CAACC,QAAQ,IAAI;QAChBd,UAAU,CAACc,QAAQ,CAACC,IAAI,CAAChB,OAAO,CAAC,CAAC,CAAC,CAACiB,IAAI,CAAC;MAC3C,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;QACdhB,eAAe,CAACgB,KAAK,CAACC,OAAO,CAAC;MAChC,CAAC,CAAC;IACN,CAAC,EACDD,KAAK,IAAI;MACPhB,eAAe,CAACgB,KAAK,CAACC,OAAO,CAAC;IAChC,CAAC,CACF;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,IAAI,GAAG,IAAIC,IAAI,EAAE;EACrB,IAAIC,KAAK,GAAGF,IAAI,CAACG,QAAQ,EAAE;EAC3B,IAAIC,OAAO,GAAGJ,IAAI,CAACK,UAAU,EAAE;EAC/B,IAAIC,aAAa,GAAI,GAAEJ,KAAM,IAAGE,OAAQ,EAAC;EAEzC,MAAMG,WAAW,GAAG,IAAIN,IAAI,EAAE,CAACE,QAAQ,EAAE;EACzC,IAAIK,IAAI;EACR,IAAIC,WAAW,CAAC9B,OAAO,EAAE;IACvB,MAAM+B,SAAS,GAAGD,WAAW,CAAC9B,OAAO,CAAC,CAAC,CAAC,CAACgC,EAAE;EAC7C;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,WAEjB9B,YAAY,iBAAI;MAAA,UAAIA;IAAY;MAAA;MAAA;MAAA;IAAA,QAAK,EACrCF,OAAO,iBACN;MAAA,UACGA,OAAO,KAAK,OAAO,gBAClB,QAAC,UAAU;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,GAC7BA,OAAO,KAAK,QAAQ,gBACtB,QAAC,WAAW;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,GAC9BA,OAAO,KAAK,MAAM,gBACpB,QAAC,WAAW;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,GAC9BA,OAAO,KAAK,cAAc,gBAC5B,QAAC,oBAAoB;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,GACvCA,OAAO,KAAK,MAAM,gBACpB,QAAC,WAAW;QAAC,SAAS,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,gBAEhC;QAAA,UAAG;MAAe;QAAA;QAAA;QAAA;MAAA;IACnB;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACG;AAEV;AAAC,GA3DQD,GAAG;AAAA,KAAHA,GAAG;AA6DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}